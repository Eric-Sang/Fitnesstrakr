const { attachActivitiesToRoutines } = require("./activities");
const client = require("./client");

async function getRoutineById(id) {}

async function getRoutinesWithoutActivities() {
  try {
    const { rows } = await client.query(`
    SELECT * FROM routines;`);

    return rows;
  } catch (error) {}
}

async function getAllRoutines() {
  try {
    const result = await client.query(`
    SELECT routines.*, users.username AS "creatorName" FROM routines
    JOIN users 
    ON routines."creatorId" = users.id;
    `);

    const attachRoutines = await attachActivitiesToRoutines(result.rows);
    // console.log(attachRoutines);
    return attachRoutines;
  } catch (error) {}
}

async function getAllRoutinesByUser({ username }) {
  try {
    const result = await client.query(
      `
    SELECT routines.*, users.username AS "creatorName" FROM routines
    JOIN users 
    ON routines."creatorId" = users.id
    WHERE users.username = $1;`,
      [username]
    );
    // console.log(result.rows);
    // return result.rows[0];
    const attachRoutines = await attachActivitiesToRoutines(result.rows);
    // console.log(attachRoutines);
    return attachRoutines;
  } catch (error) {}
}

async function getPublicRoutinesByUser({ username }) {
  try {
    const result = await client.query(
      `
      SELECT routines.*, users.username AS "creatorName" FROM routines
      JOIN users 
      ON routines."creatorId" = users.id
      WHERE users.username = $1 AND
      "isPublic" = true;
    `,
      [username]
    );
    // console.log(result.rows[0]);
    // return result.rows[0];
    // console.log(result.rows);
    // return result.rows;
    const attachRoutines = await attachActivitiesToRoutines(result.rows);
    // console.log(attachRoutines);
    return attachRoutines;
  } catch (error) {}
}

async function getAllPublicRoutines() {
  try {
    const result = await client.query(`
    SELECT routines.*, users.username AS "creatorName" FROM routines
    JOIN users 
    ON routines."creatorId" = users.id
    WHERE "isPublic" = true;
    `);
    // return result.rows;
    const attachRoutines = await attachActivitiesToRoutines(result.rows);
    return attachRoutines;
  } catch (error) {}
}

async function getPublicRoutinesByActivity({ id }) {}

async function createRoutine({ creatorId, isPublic, name, goal }) {
  try {
    const result = await client.query(
      `
    INSERT INTO routines ("creatorId", "isPublic", name, goal) 
    VALUES($1, $2, $3, $4)
    RETURNING *;
    `,
      [creatorId, isPublic, name, goal]
    );
    return result.rows[0];
  } catch (error) {
    console.log(error);
  }
}

async function updateRoutine({ id, ...fields }) {}

async function destroyRoutine(id) {}

module.exports = {
  getRoutineById,
  getRoutinesWithoutActivities,
  getAllRoutines,
  getAllPublicRoutines,
  getAllRoutinesByUser,
  getPublicRoutinesByUser,
  getPublicRoutinesByActivity,
  createRoutine,
  updateRoutine,
  destroyRoutine,
};
